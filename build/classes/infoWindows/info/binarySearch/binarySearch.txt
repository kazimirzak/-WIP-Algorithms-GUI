Binary search works on sorted arrays. Binary search begins by comparing the middle element of the array with the target value. If the target value matches the middle element, its position in the array is returned. If the target value is less than the middle element, the search continues in the lower half of the array. If the target value is greater than the middle element, the search continues in the upper half of the array. By doing this, the algorithm eliminates the half in which the target value cannot lie in each iteration.

The running times for binary search are:
Worst-case: O(lg(n))
Best-case: O(1)
Average-case: O(lg(n))

Please note that they array used in binary search has to be sorted so if the input given is not sorted then it will be before it is visualized.
For all numbers mentioned below the following requirements should be met:
It has to be a whole number and if it negative it should be write as "-x" so negative 10 becomes "-10".

Explanation of GUI:
