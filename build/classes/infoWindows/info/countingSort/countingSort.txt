In computer science, counting sort is an algorithm for sorting a collection of objects according to keys that are small integers; that is, it is an integer sorting algorithm. It operates by counting the number of objects that have each distinct key value, and using arithmetic on those counts to determine the positions of each key value in the output sequence. Its running time is linear in the number of items and the difference between the maximum and minimum key values, so it is only suitable for direct use in situations where the variation in keys is not significantly greater than the number of items. However, it is often used as a subroutine in another sorting algorithm, radix sort, that can handle larger keys more efficiently.

The running times for counting sort are:
Worst-case: O(n + k)
Best-case: O(n + k)
Average-case: O(n + k)

Here k is the highest key + 1 e.g. if you have an array with 1 10 12 13, then k = 13 + 1 = 14. The reason why its + 1 is because its all numbers from 0 to the highest key therefore 13 is the highest key and we get 13 + 1 to include the 0.
When it comes to this program you do not have to input the k though as the program will just find the highest key and add 1.

Please note that counting sort does not work on negative numbers and therefore can not be a part of the input.

For all numbers mentioned below the following requirements should be met:
It has to be a positive whole number.

Explanation of GUI:
